{"ast":null,"code":"var _jsxFileName = \"/Users/chae-jeongwon/github/kiosk/src/pages/TestPage.js\",\n  _s = $RefreshSig$();\n// TestPage.js\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QueryComponent() {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [prompt, setPrompt] = useState(\"\");\n  const [recording, setRecording] = useState(false); // recording 상태 추가\n  const [audioBlob, setAudioBlob] = useState(null); // 오디오 Blob 상태 추가\n  const lastAudioDetectedTime = useRef(null); // useRef로 변경\n\n  const promptRef = useRef(null);\n  const audioRef = useRef(null); // 오디오 요소에 접근하기 위한 useRef\n\n  useEffect(() => {\n    startListening();\n  }, []);\n  async function startRecording(stream) {\n    try {\n      const recorder = new MediaRecorder(stream);\n      const chunks = [];\n      recorder.ondataavailable = event => {\n        chunks.push(event.data);\n      };\n      recorder.onstop = async () => {\n        try {\n          const blob = new Blob(chunks, {\n            type: \"audio/wav\"\n          });\n          setAudioBlob(blob); // 녹음이 끝나면 Blob을 상태로 설정\n        } catch (error) {\n          console.error(\"Error creating Blob:\", error);\n        }\n      };\n      if (recording) {\n        // 녹음 중인 경우 녹음을 중지하고 recording 상태를 false로 변경\n        recorder.stop();\n        setRecording(false);\n      } else {\n        // 녹음 중이 아닌 경우 녹음을 시작하고 recording 상태를 true로 변경\n        recorder.start();\n        setRecording(true);\n      }\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n    }\n  }\n  async function startListening() {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const audioContext = new AudioContext();\n      const source = audioContext.createMediaStreamSource(stream);\n      const processor = audioContext.createScriptProcessor(1024, 1, 1);\n      processor.onaudioprocess = function (event) {\n        const inputData = event.inputBuffer.getChannelData(0);\n        const bufferLength = inputData.length;\n        let sum = 0;\n        for (let i = 0; i < bufferLength; i++) {\n          sum += Math.abs(inputData[i]);\n        }\n        const average = sum / bufferLength;\n        if (average > 0.01 && !recording) {\n          startRecording(stream);\n        } else if (average <= 0.01 && recording) {\n          lastAudioDetectedTime.current = Date.now();\n          startRecording(stream); // 녹음 종료 시 recording 상태를 false로 변경하지 않고 다시 녹음 시작\n        }\n      };\n      source.connect(processor);\n      processor.connect(audioContext.destination);\n    } catch (error) {\n      console.error(\"Error accessing microphone:\", error);\n    }\n  }\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const dateTime = new Date();\n    const time = dateTime.toLocaleTimeString();\n    setHistory(prevHistory => [...prevHistory, {\n      user: prompt,\n      time\n    }]);\n    setPrompt(\"\");\n    promptRef.current.value = \"\";\n    try {\n      // Fetch 로직...\n      console.log();\n    } catch (error) {\n      console.error(\"Error in fetch:\", error);\n    }\n  }\n  function handlePlay() {\n    if (audioBlob) {\n      const audioUrl = URL.createObjectURL(audioBlob);\n      audioRef.current.src = audioUrl;\n      audioRef.current.play();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"ChatGPT Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Press and hold the spacebar to record audio. Release the spacebar to stop recording.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      id: \"response\",\n      children: history.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${entry.user ? \"user-message\" : \"bot-message\"}`,\n        children: entry.user ? entry.user : entry.bot\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow-1 me-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"prompt\",\n            className: \"form-label\",\n            children: \"Prompt:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"prompt\",\n            name: \"prompt\",\n            rows: \"3\",\n            ref: promptRef,\n            onChange: event => setPrompt(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlay,\n          className: \"btn btn-success ms-2\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRecording,\n          className: \"btn btn-warning ms-2\",\n          children: recording ? \"Stop Recording\" : \"Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      controls: true,\n      style: {\n        display: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: URL.createObjectURL(audioBlob),\n        type: \"audio/wav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(QueryComponent, \"XlMnoXBxxYcXqOQ6l9SgnduqyLY=\");\n_c = QueryComponent;\nexport default QueryComponent;\nvar _c;\n$RefreshReg$(_c, \"QueryComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","QueryComponent","_s","history","setHistory","prompt","setPrompt","recording","setRecording","audioBlob","setAudioBlob","lastAudioDetectedTime","promptRef","audioRef","startListening","startRecording","stream","recorder","MediaRecorder","chunks","ondataavailable","event","push","data","onstop","blob","Blob","type","error","console","stop","start","navigator","mediaDevices","getUserMedia","audio","audioContext","AudioContext","source","createMediaStreamSource","processor","createScriptProcessor","onaudioprocess","inputData","inputBuffer","getChannelData","bufferLength","length","sum","i","Math","abs","average","current","Date","now","connect","destination","handleSubmit","preventDefault","dateTime","time","toLocaleTimeString","prevHistory","user","value","log","handlePlay","audioUrl","URL","createObjectURL","src","play","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","entry","index","bot","onSubmit","htmlFor","name","rows","ref","onChange","target","onClick","controls","style","display","_c","$RefreshReg$"],"sources":["/Users/chae-jeongwon/github/kiosk/src/pages/TestPage.js"],"sourcesContent":["// TestPage.js\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nfunction QueryComponent() {\n  const [history, setHistory] = useState([]);\n  const [prompt, setPrompt] = useState(\"\");\n  const [recording, setRecording] = useState(false); // recording 상태 추가\n  const [audioBlob, setAudioBlob] = useState(null); // 오디오 Blob 상태 추가\n  const lastAudioDetectedTime = useRef(null); // useRef로 변경\n\n  const promptRef = useRef(null);\n  const audioRef = useRef(null); // 오디오 요소에 접근하기 위한 useRef\n\n  useEffect(() => {\n    startListening();\n  }, []);\n\n  async function startRecording(stream) {\n    try {\n      const recorder = new MediaRecorder(stream);\n      const chunks = [];\n\n      recorder.ondataavailable = (event) => {\n        chunks.push(event.data);\n      };\n\n      recorder.onstop = async () => {\n        try {\n          const blob = new Blob(chunks, { type: \"audio/wav\" });\n          setAudioBlob(blob); // 녹음이 끝나면 Blob을 상태로 설정\n        } catch (error) {\n          console.error(\"Error creating Blob:\", error);\n        }\n      };\n\n      if (recording) {\n        // 녹음 중인 경우 녹음을 중지하고 recording 상태를 false로 변경\n        recorder.stop();\n        setRecording(false);\n      } else {\n        // 녹음 중이 아닌 경우 녹음을 시작하고 recording 상태를 true로 변경\n        recorder.start();\n        setRecording(true);\n      }\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n    }\n  }\n\n  async function startListening() {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n\n      const audioContext = new AudioContext();\n      const source = audioContext.createMediaStreamSource(stream);\n      const processor = audioContext.createScriptProcessor(1024, 1, 1);\n\n      processor.onaudioprocess = function (event) {\n        const inputData = event.inputBuffer.getChannelData(0);\n        const bufferLength = inputData.length;\n        let sum = 0;\n        for (let i = 0; i < bufferLength; i++) {\n          sum += Math.abs(inputData[i]);\n        }\n        const average = sum / bufferLength;\n        if (average > 0.01 && !recording) {\n          startRecording(stream);\n        } else if (average <= 0.01 && recording) {\n          lastAudioDetectedTime.current = Date.now();\n          startRecording(stream); // 녹음 종료 시 recording 상태를 false로 변경하지 않고 다시 녹음 시작\n        }\n      };\n\n      source.connect(processor);\n      processor.connect(audioContext.destination);\n    } catch (error) {\n      console.error(\"Error accessing microphone:\", error);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    const dateTime = new Date();\n    const time = dateTime.toLocaleTimeString();\n\n    setHistory((prevHistory) => [...prevHistory, { user: prompt, time }]);\n    setPrompt(\"\");\n    promptRef.current.value = \"\";\n\n    try {\n      // Fetch 로직...\n      console.log();\n    } catch (error) {\n      console.error(\"Error in fetch:\", error);\n    }\n  }\n\n  function handlePlay() {\n    if (audioBlob) {\n      const audioUrl = URL.createObjectURL(audioBlob);\n      audioRef.current.src = audioUrl;\n      audioRef.current.play();\n    }\n  }\n\n  return (\n    <div className=\"container p-3\">\n      <h3>ChatGPT Clone</h3>\n      <p>\n        Press and hold the spacebar to record audio. Release the spacebar to\n        stop recording.\n      </p>\n\n      <div className=\"chat-container\" id=\"response\">\n        {history.map((entry, index) => (\n          <div\n            key={index}\n            className={`chat-message ${\n              entry.user ? \"user-message\" : \"bot-message\"\n            }`}\n          >\n            {entry.user ? entry.user : entry.bot}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"chat-input\">\n        <form onSubmit={handleSubmit} className=\"d-flex align-items-center\">\n          <div className=\"flex-grow-1 me-2\">\n            <label htmlFor=\"prompt\" className=\"form-label\">\n              Prompt:\n            </label>\n            <textarea\n              className=\"form-control\"\n              id=\"prompt\"\n              name=\"prompt\"\n              rows=\"3\"\n              ref={promptRef}\n              onChange={(event) => setPrompt(event.target.value)}\n            ></textarea>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n          <button onClick={handlePlay} className=\"btn btn-success ms-2\">\n            Play\n          </button>\n          <button onClick={startRecording} className=\"btn btn-warning ms-2\">\n            {recording ? \"Stop Recording\" : \"Record\"}\n          </button>\n        </form>\n      </div>\n\n      {/* 오디오 플레이어 */}\n      {audioBlob && (\n        <audio ref={audioRef} controls style={{ display: \"none\" }}>\n          <source src={URL.createObjectURL(audioBlob)} type=\"audio/wav\" />\n          Your browser does not support the audio element.\n        </audio>\n      )}\n    </div>\n  );\n}\n\nexport default QueryComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}